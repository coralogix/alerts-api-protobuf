syntax = "proto3";

package com.coralogix.alerts.v2;

import "google/protobuf/wrappers.proto";

import "com/coralogix/alerts/v2/alert.proto";
import "com/coralogix/alerts/v1/alert_event.proto";
import "com/coralogix/alerts/v1/alert_meta_label.proto";
import "com/coralogix/alerts/v1/alert_severity.proto";
import "com/coralogix/alerts/v2/alert_condition.proto";
import "com/coralogix/alerts/v1/alert_filters.proto";
import "com/coralogix/alerts/v1/alert_service.proto";
import "com/coralogix/alerts/v1/alert_active_when.proto";
import "com/coralogix/alerts/v1/date_time.proto";
import "com/coralogix/alerts/v2/alert_notification_group.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "com/coralogix/alerts/v1/tracing_alert.proto";

service AlertService {
  rpc GetAlert(GetAlertRequest) returns (GetAlertResponse) {
    option (v1.audit_log_description).description = "get alert";
    option (google.api.http) = {
      get: "/api/v2/alerts/{id}"
    };
  }
  rpc GetAlerts(GetAlertsRequest) returns (GetAlertsResponse) {
    option (v1.audit_log_description).description = "get alerts";
    option (google.api.http) = {
      get: "/api/v2/alerts"
    };
  }
  rpc GetAlertByUniqueId(GetAlertByUniqueIdRequest) returns (GetAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "get alert by unique id";
    option (google.api.http) = {
      get: "/api/v2/alerts/unique/{id}"
    };
  }

  rpc GetAlertModelMapping(GetAlertModelMappingRequest) returns (GetAlertModelMappingResponse){
    option (v1.audit_log_description).description = "get alert mapping";
    option (google.api.http) = {
      post: "/api/v2/alert-mapping/"
      body: "*"
    };
  }

  rpc CreateAlert(CreateAlertRequest) returns (CreateAlertResponse) {
    option (v1.audit_log_description).description = "create alert";
    option (google.api.http) = {
      post: "/api/v2/alerts/"
      body: "*"
    };
  }
  rpc UpdateAlert(UpdateAlertRequest) returns (UpdateAlertResponse) {
    option (v1.audit_log_description).description = "update alert";
    option (google.api.http) = {
      put: "/api/v2/alerts/{alert.id}"
      body: "alert"
    };
  }
  rpc UpdateAlertByUniqueId(UpdateAlertByUniqueIdRequest) returns (UpdateAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "update alert";
    option (google.api.http) = {
      put: "/api/v2/alerts/unique/{alert.unique_identifier}"
      body: "alert"
    };
  }
  rpc DeleteAlert(DeleteAlertRequest) returns (DeleteAlertResponse) {
    option (v1.audit_log_description).description = "delete alert";
    option (google.api.http) = {
      delete: "/api/v2/alerts/{alertid}"
    };
  }
  rpc DeleteAlertByUniqueId(DeleteAlertByUniqueIdRequest) returns (DeleteAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "delete alert";
    option (google.api.http) = {
      delete: "/api/v2/alerts/unique/{id}"
    };
  }
  rpc GetAlertEvents(GetAlertEventsRequest) returns (GetAlertEventsResponse) {
    option (v1.audit_log_description).description = "get alert events";
    option (google.api.http) = {
      get: "/api/v2/alerts/events"
    };
  }
  rpc ValidateAlert(ValidateAlertRequest) returns (ValidateAlertResponse) {
    option (v1.audit_log_description).description = "validate alert";
    option (google.api.http) = {
      post: "/api/v2/alerts/validate"
      body: "alert"
    };
  }
  rpc GetAlertEventsCountBySeverity(GetAlertEventsCountBySeverityRequest) returns (GetAlertEventsCountBySeverityResponse) {
    option (v1.audit_log_description).description = "get alert events count by severity";
    option (google.api.http) = {
      get: "/api/v2/alerts/events/count-by-severity"
    };
  }
  rpc GetCompanyAlertsLimit(GetCompanyAlertsLimitRequest) returns (GetCompanyAlertsLimitResponse) {
    option (v1.audit_log_description).description = "get company alerts limit";
    option (google.api.http) = {
      get: "/api/v2/alerts/company-limit"
    };
  }
}

message GetAlertRequest {
  google.protobuf.StringValue id = 1;
}

message GetAlertResponse {
  Alert alert = 1;
}

message GetAlertByUniqueIdRequest {
  google.protobuf.StringValue id = 1;
}

message GetAlertByUniqueIdResponse {
  Alert alert = 1;
}

message CreateAlertRequest {
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue description = 3;

  google.protobuf.BoolValue is_active = 4;

  v1.AlertSeverity severity = 5;
  v1.Date expiration = 6;

  AlertCondition condition = 7;
  optional ShowInInsight show_in_insight = 8;
  repeated AlertNotificationGroups notification_groups = 9;
  v1.AlertFilters filters = 10;

  v1.AlertActiveWhen active_when = 11;

  repeated google.protobuf.StringValue notification_payload_filters = 12;

  repeated v1.MetaLabel meta_labels = 13;
  repeated google.protobuf.StringValue meta_labels_strings = 14;

  optional v1.TracingAlert tracing_alert = 15;
}

message CreateAlertResponse {
  Alert alert = 1;
}

message GetAlertModelMappingRequest {
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue description = 3;

  google.protobuf.BoolValue is_active = 4;

  v1.AlertSeverity severity = 5;
  v1.Date expiration = 6;

  AlertCondition condition = 7;
  optional ShowInInsight show_in_insight = 8;
  repeated AlertNotificationGroups notification_groups = 9;
  v1.AlertFilters filters = 10;

  v1.AlertActiveWhen active_when = 11;

  repeated google.protobuf.StringValue notification_payload_filters = 12;

  repeated v1.MetaLabel meta_labels = 13;
  repeated google.protobuf.StringValue meta_labels_strings = 14;

  optional v1.TracingAlert tracing_alert = 15;
}

message GetAlertModelMappingResponse {
  google.protobuf.Struct alert_definition = 1;
}

message UpdateAlertRequest {
  Alert alert = 1;
}

message UpdateAlertResponse {
  Alert alert = 1;
}

message UpdateAlertByUniqueIdRequest {
  Alert alert = 1;
}

message UpdateAlertByUniqueIdResponse {
  Alert alert = 1;
}
message GetAlertsRequest {
}

message GetAlertsResponse {
  repeated Alert alerts = 1;
}

message ValidateAlertRequest {
  Alert alert = 1;
}
message ValidateAlertResponse {
}

message DeleteAlertRequest {
  google.protobuf.StringValue id = 1;
}
message DeleteAlertResponse {
}

message DeleteAlertByUniqueIdRequest {
  google.protobuf.StringValue id = 1;
}

message DeleteAlertByUniqueIdResponse {
}

message GetAlertEventsRequest {
  google.protobuf.Timestamp from = 2;
  google.protobuf.Timestamp to = 3;
}

message GetAlertEventsResponse {
  repeated v1.AlertEvent events = 1;
}

message GetAlertEventsCountBySeverityRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
  repeated google.protobuf.StringValue applications = 3;
  repeated google.protobuf.StringValue subsystems = 4;
}

message GetAlertEventsCountBySeverityResponse {
  repeated AlertEventsCountBySeverity event_counts = 1;
}

message AlertEventsCountBySeverity {
  v1.AlertSeverity severity = 1;
  v1.AlertEventCountType type = 2;
  v1.AlertEvent.AlertEventSubType sub_type = 3;
  google.protobuf.Int32Value count = 4;
}

message GetCompanyAlertsLimitRequest {}

message GetCompanyAlertsLimitResponse {
  google.protobuf.StringValue company_id = 1;
  google.protobuf.Int32Value limit = 2;
  google.protobuf.Int32Value used = 3;
}