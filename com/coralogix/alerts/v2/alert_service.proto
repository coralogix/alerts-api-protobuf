syntax = "proto3";

package com.coralogix.alerts.v2;

import "google/protobuf/wrappers.proto";

import "com/coralogix/alerts/v2/alert.proto";
import "com/coralogix/alerts/v1/alert_event.proto";
import "com/coralogix/alerts/v1/alert_meta_label.proto";
import "com/coralogix/alerts/v1/alert_severity.proto";
import "com/coralogix/alerts/v2/alert_condition.proto";
import "com/coralogix/alerts/v1/alert_filters.proto";
import "com/coralogix/alerts/v1/alert_service.proto";
import "com/coralogix/alerts/v1/alert_active_when.proto";
import "com/coralogix/alerts/v1/date_time.proto";
import "com/coralogix/alerts/v1/fields_to_update.proto";
import "com/coralogix/alerts/v2/alert_notification_group.proto";
import "com/coralogix/alerts/v2/alert_incident_settings.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "com/coralogix/alerts/v1/tracing_alert.proto";
import "com/coralogix/openapi/v1/annotations.proto";

service AlertService {
  option (com.coralogix.openapi.v1.service) = {
    description: "API to define, query, and manage your alerts"
    resource_name: "Alert"
  };
  rpc GetAlert(GetAlertRequest) returns (GetAlertResponse) {
    option (v1.audit_log_description).description = "get alert";
    option (google.api.http) = {
      get: "/api/v2/alerts/{id}"

      additional_bindings: {
        get: "/v1/alerts/{id}"
        response_body: "alert"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Gets alert by id"
    };
  }
  rpc GetAlerts(GetAlertsRequest) returns (GetAlertsResponse) {
    option (v1.audit_log_description).description = "get alerts";
    option (google.api.http) = {
      get: "/api/v2/alerts"

      additional_bindings: {
        get: "/v1/alerts"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      datasource: true
      description: "Lists alerts"
    };
  }
  rpc GetAlertByUniqueId(GetAlertByUniqueIdRequest) returns (GetAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "get alert by unique id";
    option (google.api.http) = {
      get: "/api/v2/alerts/unique/{id}"
    };
  }

  rpc GetAlertModelMapping(GetAlertModelMappingRequest) returns (GetAlertModelMappingResponse){
    option (v1.audit_log_description).description = "get alert mapping";
    option (google.api.http) = {
      post: "/api/v2/alert-mapping/"
      body: "*"
    };
  }

  rpc CreateAlert(CreateAlertRequest) returns (CreateAlertResponse) {
    option (v1.audit_log_description).description = "create alert";
    option (google.api.http) = {
      post: "/api/v2/alerts/"
      body: "*"

      additional_bindings: {
        post: "/v1/alerts"
        body: "*"
        response_body: "alert"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Creates alert"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"AlertPrototype\""}
      ]
    };
  }
  rpc UpdateAlert(UpdateAlertRequest) returns (UpdateAlertResponse) {
    option (v1.audit_log_description).description = "update alert";
    option (google.api.http) = {
      put: "/api/v2/alerts/{alert.id}"
      body: "alert"

      additional_bindings: {
        put: "/v1/alerts/{alert.id}"
        body: "alert"
        response_body: "alert"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Updates alert"
      request_schema: "AlertPrototype"
      path_parameter_name: "id"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"AlertPrototype\""}
      ]
    };
  }
  rpc UpdateAlertByUniqueId(UpdateAlertByUniqueIdRequest) returns (UpdateAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "update alert";
    option (google.api.http) = {
      put: "/api/v2/alerts/unique/{alert.unique_identifier}"
      body: "alert"
    };
  }
  rpc DeleteAlert(DeleteAlertRequest) returns (DeleteAlertResponse) {
    option (v1.audit_log_description).description = "delete alert";
    option (google.api.http) = {
      delete: "/api/v2/alerts/{alertid}"

      additional_bindings: {
        delete: "/v1/alerts/{id}"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Deletes alert"
    };

  }
  rpc DeleteAlertByUniqueId(DeleteAlertByUniqueIdRequest) returns (DeleteAlertByUniqueIdResponse) {
    option (v1.audit_log_description).description = "delete alert";
    option (google.api.http) = {
      delete: "/api/v2/alerts/unique/{id}"
    };
  }
  rpc GetAlertEvents(GetAlertEventsRequest) returns (GetAlertEventsResponse) {
    option (v1.audit_log_description).description = "get alert events";
    option (google.api.http) = {
      get: "/api/v2/alerts/events"
    };
  }
  rpc ValidateAlert(ValidateAlertRequest) returns (ValidateAlertResponse) {
    option (v1.audit_log_description).description = "validate alert";
    option (google.api.http) = {
      post: "/api/v2/alerts/validate"
      body: "alert"
    };
  }
  rpc GetAlertEventsCountBySeverity(GetAlertEventsCountBySeverityRequest) returns (GetAlertEventsCountBySeverityResponse) {
    option (v1.audit_log_description).description = "get alert events count by severity";
    option (google.api.http) = {
      get: "/api/v2/alerts/events/count-by-severity"
    };
  }
  rpc GetCompanyAlertsLimit(GetCompanyAlertsLimitRequest) returns (GetCompanyAlertsLimitResponse) {
    option (v1.audit_log_description).description = "get company alerts limit";
    option (google.api.http) = {
      get: "/api/v2/alerts/company-limit"
    };
  }
}

message GetAlertRequest {
  // Alert id
  google.protobuf.StringValue id = 1 [(com.coralogix.openapi.v1.field) = { required: true, format: "uuid", min_length: 36, max_length: 36, example: "\"3dc02998-0b50-4ea8-b68a-4779d716fa1f\""  } ];
}

message GetAlertResponse {
  Alert alert = 1;
}

message GetAlertByUniqueIdRequest {
  google.protobuf.StringValue id = 1;
}

message GetAlertByUniqueIdResponse {
  Alert alert = 1;
}
// Alert to create/update
message CreateAlertRequest {
  option (com.coralogix.openapi.v1.message) = {
    name: "AlertPrototype"
  };
  // Alert name
  google.protobuf.StringValue name = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true
    example : "\"Unique count alert\"",
  } ];
  // Alert description
  google.protobuf.StringValue description = 3 [ (com.coralogix.openapi.v1.field) = {
    required : true
    example : "\"Example of unique count alert from terraform\"",
  } ];
  // Alert is active
  google.protobuf.BoolValue is_active = 4 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    example : "true"
  } ];
  // Alert severity
  v1.AlertSeverity severity = 5  [ (com.coralogix.openapi.v1.field) = {
    required : true,
    example : "\"info_or_unspecified\""
  } ];
  // Alert expiration date
  v1.Date expiration = 6;
  // Alert condition
  AlertCondition condition = 7 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  } ];
  // Alert show in insight
  optional ShowInInsight show_in_insight = 8 [ deprecated = true];
  // Alert notification groups
  repeated AlertNotificationGroups notification_groups = 9 [ (com.coralogix.openapi.v1.field) = {
    description : "Alert notification groups"
    min_items:1,
    max_items:10
    required: true 
  }];
  // Incident settings, will create the incident based on this configuration
  optional AlertIncidentSettings incident_settings = 16;
  // Alert filters
  v1.AlertFilters filters = 10 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
  // When should the alert be active
  v1.AlertActiveWhen active_when = 11;
  // JSON keys to include in the alert notification, if left empty get the full log text in the alert notification
  repeated google.protobuf.StringValue notification_payload_filters = 12 [ (com.coralogix.openapi.v1.field) = {
    max_items: 100,
    min_items: 0
  }];
  // The Meta labels to add to the alert
  repeated v1.MetaLabel meta_labels = 13 [ (com.coralogix.openapi.v1.field) = {
    max_items: 200,
  }];
  // The Meta labels to add to the alert as string with ':' separator
  repeated google.protobuf.StringValue meta_labels_strings = 14 [ (com.coralogix.openapi.v1.field) = {
    max_length: 2000,
    example : "[\"env:dev\"]",
  } ];
  // The definition for tracing alert
  optional v1.TracingAlert tracing_alert = 15;
}

message CreateAlertResponse {
  Alert alert = 1  [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}

message GetAlertModelMappingRequest {
  google.protobuf.StringValue name = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true
    example : "\"Unique count alert\"",
  } ];
  google.protobuf.StringValue description = 3 [ (com.coralogix.openapi.v1.field) = {
    required : true
    example : "\"Example of unique count alert from terraform\"",
  } ];

  google.protobuf.BoolValue is_active = 4 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    example : "true"
  } ];

  v1.AlertSeverity severity = 5 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    example : "\"info_or_unspecified\""
  } ];
  // Alert expiration date
  v1.Date expiration = 6 [ (com.coralogix.openapi.v1.field) = {
  } ];
  // Alert condition
  AlertCondition condition = 7 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  } ];

  optional ShowInInsight show_in_insight = 8 [ deprecated = true];
  // Alert notification groups
  repeated AlertNotificationGroups notification_groups = 9 [ (com.coralogix.openapi.v1.field) = {
    min_items:1,
    max_items:10
  }];
  // Incident settings, will create the incident based on this configuration
  optional AlertIncidentSettings incident_settings = 16;
  // Alert filters
  v1.AlertFilters filters = 10 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
  // When should the alert be active
  v1.AlertActiveWhen active_when = 11;
  // JSON keys to include in the alert notification, if left empty get the full log text in the alert notification
  repeated google.protobuf.StringValue notification_payload_filters = 12 [ (com.coralogix.openapi.v1.field) = {
    max_items: 100,
    min_items: 0
  }];
  // The Meta labels to add to the alert
  repeated v1.MetaLabel meta_labels = 13 [ (com.coralogix.openapi.v1.field) = {
    max_items: 200,
  }];
  // The Meta labels to add to the alert as string with ':' separator
  repeated google.protobuf.StringValue meta_labels_strings = 14 [ (com.coralogix.openapi.v1.field) = {
    max_length: 2000,
    example : "[\"env:dev\"]",
  } ];
  // The definition for tracing alert
  optional v1.TracingAlert tracing_alert = 15;
}

message GetAlertModelMappingResponse {
  google.protobuf.Struct alert_definition = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}

message UpdateAlertRequest {
  Alert alert = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
  repeated v1.FieldsToUpdate fields_to_update = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}

message UpdateAlertResponse {
  Alert alert = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}

message UpdateAlertByUniqueIdRequest {
  Alert alert = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
  repeated v1.FieldsToUpdate fields_to_update = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}

message UpdateAlertByUniqueIdResponse {
  Alert alert = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}
message GetAlertsRequest {
}

// Alerts collection
message GetAlertsResponse {
  option (com.coralogix.openapi.v1.message) = {
    name: "AlertCollection"
  };
  // Alerts
  repeated Alert alerts = 1;
}

message ValidateAlertRequest {
  Alert alert = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
  }];
}
message ValidateAlertResponse {
}

message DeleteAlertRequest {
  // Alert id
  google.protobuf.StringValue id = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    format : "uuid",
    min_length : 36,
    max_length : 36,
    example : "\"3dc02998-0b50-4ea8-b68a-4779d716fa1f\"",
    pattern : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
}
message DeleteAlertResponse {
}

message DeleteAlertByUniqueIdRequest {
  google.protobuf.StringValue id = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    format : "uuid",
    min_length : 36,
    max_length : 36,
    example : "\"3dc02998-0b50-4ea8-b68a-4779d716fa1f\"",
    pattern : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
}

message DeleteAlertByUniqueIdResponse {
}

message GetAlertEventsRequest {
  google.protobuf.Timestamp from = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  }];
  google.protobuf.Timestamp to = 3 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  }];
}

message GetAlertEventsResponse {
  repeated v1.AlertEvent events = 1;
}

message GetAlertEventsCountBySeverityRequest {
  google.protobuf.Timestamp from = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  }];
  google.protobuf.Timestamp to = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  }];
  repeated google.protobuf.StringValue applications = 3;
  repeated google.protobuf.StringValue subsystems = 4;
}

message GetAlertEventsCountBySeverityResponse {
  repeated AlertEventsCountBySeverity event_counts = 1;
}

message AlertEventsCountBySeverity {
  v1.AlertSeverity severity = 1;
  v1.AlertEventCountType type = 2;
  v1.AlertEvent.AlertEventSubType sub_type = 3;
  google.protobuf.Int32Value count = 4;
}

message GetCompanyAlertsLimitRequest {}

message GetCompanyAlertsLimitResponse {
  google.protobuf.StringValue company_id = 1;
  google.protobuf.Int32Value limit = 2;
  google.protobuf.Int32Value used = 3;
  google.protobuf.Int32Value dynamic_alert_limit = 4;
  google.protobuf.Int32Value dynamic_alert_used = 5;
  
}
